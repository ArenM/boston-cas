= simple_form_for [:admin, @user], url: confirm_admin_user_path, method: :post do |f|
  = f.error_notification
  .form-inputs
    = f.simple_fields_for :contact do |contact_fields|
      = contact_fields.input :first_name, required: true
      = contact_fields.input :last_name, required: true
      -# We override the phone and email fields, so we need to manually show errors
      - if @user.errors.messages[:phone]
        .alert.alert-danger
          = @user.errors.messages[:phone].last.humanize
      = contact_fields.input :phone, as: :tel
      -# We override the phone and email fields, so we need to manually show errors
      - if @user.errors.messages[:email]
        .alert.alert-danger
          = @user.errors.messages[:email].last.humanize
      = contact_fields.input :email, as: :email, required: true
      = f.input :agency
    .row
      .col-md-6
        .form--checkbox-groups
          %h3 CAS Roles for Access Permissions
          = f.association :roles, as: :check_boxes, label_method: :role_name, collection: Role.available_roles
        .form--checkbox-groups
          %h3 Additional Options
          = f.input :receive_initial_notification
      .col-md-6
        %h3 Program Permissions
        = f.input :editable_programs, as: :select, label: 'Editable Programs', collection: Program.order(:name), selected: @editable_programs, input_html: {multiple: true, class: :select2}
  .form-actions
    = f.button :submit, class: 'btn btn-primary'

-# When we've connected contacts to user accounts, this would be a good roll-up place to show the contact relationships
-# - unless @user.new_record?
-#   = render 'contact_relationships'