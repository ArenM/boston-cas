.o-page__title
  %h1= t '.title'
  - if can_add_vacancies?
    .o-page__action.o-page__action--stacked
      = link_to new_opportunity_path, class: 'btn btn-primary margin-bottom-02' do
        %span.icon-plus
        Submit a Vacancy
      %a.how-to-popover{'data-toggle': "popover", 'data-placement': "bottom", 'data-content': "<ol><li>Find the #{Building.model_name.human} & edit units available</li><li>Find program and make a voucher available</li></ol>", role: 'button', 'tabindex': 0,'data-html': "true", 'data-trigger': "focus"}
        %span.icon-info
        How to Add a Vacancy

- @prompt = t '.search_prompt'
.row.o-search
  .col-sm-4.o-search__field-wrapper
    = render 'search_form'
  .col-sm-6.sort-filter.o-search__actions
    = render 'filter'
.row.table-utilities
  .col-sm-8
    %p= page_entries_info @opportunities, entry_name: 'vacancy'
.row
  .col-sm-12
    .table-responsive
      %table.table.table-condensed.table-striped
        %thead
          %tr
            %th Program
            %th Sub-Program
            %th= "#{Building.model_name.human} & Unit"
            %th Voucher Type
            %th Status
            %th Available Since
            %th Prioritized Clients
        %tbody
          - @opportunities.each do |opportunity|
            - if opportunity.deleted_at
              - deleted = "deleted"
            %tr
              %td
                - unless opportunity.voucher.nil?
                  = link_to edit_program_sub_program_program_details_path(opportunity.voucher.sub_program.program, opportunity.voucher.sub_program) do
                    = opportunity.voucher.sub_program.program.name
              %td
                - unless opportunity.voucher.nil?
                  = link_to edit_program_sub_program_path(opportunity.voucher.sub_program.program, opportunity.voucher.sub_program) do
                    = opportunity.voucher.sub_program.name
              %td
                - unless opportunity.unit.nil?
                  = link_to edit_unit_path(opportunity.unit) do
                    = "#{opportunity.try(:unit).try(:building).try(:name)}: #{opportunity.try(:unit).try(:name)}"
                - else
                  - unless opportunity.voucher.nil?
                    - unless opportunity.voucher.unit.nil?
                      = "#{opportunity.voucher.unit.try(:building).try(:name)}: #{opportunity.voucher.unit.try(:name)}"
              %td
                - unless opportunity.voucher.nil?
                  = link_to program_sub_program_vouchers_path(opportunity.voucher.sub_program.program, opportunity.voucher.sub_program) do
                    = "#{opportunity.voucher.sub_program.program_type}"
              %td{:class => deleted}
                - active_matches = opportunity.active_matches.count
                - if active_matches >= 1
                  = render 'multiple_matches', opportunity: opportunity
                - elsif opportunity.successful_match.present?
                  Successful
                - elsif opportunity.voucher.date_available && opportunity.voucher.date_available > Date.today
                  Available:
                  = date_format(opportunity.voucher.date_available)
                - elsif opportunity.available || opportunity.voucher.available
                  Available
              %td{:class => deleted}= opportunity.voucher&.available_at&.to_date
              %td.text-center
                = link_to opportunity_matches_path(opportunity) do
                  .badge.badge-success= opportunity.matching_clients.count
    %p= paginate @opportunities