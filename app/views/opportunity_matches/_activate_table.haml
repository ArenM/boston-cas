.c-card.c-card-flush
  .c-card__content
    = simple_form_for :checkboxes do |f|
      - # %p= page_entries_info @matches
      - # %p= paginate @matches
      %table.table.table-striped
        %thead
          %tr
            %th Client Name
            %th.text-center= priority_label
            %th.text-center Other Active Matches
            - if can_activate_matches?
              %th.text-center Activate Match?
        %tbody
          - @matches.each do |client|
            - confidential_opportunity = @opportunity.confidential? && ! client.has_full_housing_release?
            - hide_client_name = (client.confidential? || client.match_for_opportunity(@opportunity).try(:confidential?) || confidential_opportunity) && ! show_confidential_names?
            - name = client.client_name_for_contact current_user.contact, hidden: hide_client_name
            
            %tr{class: active_client_ids.include?(client.id) ? 'client--match-active' : ''}
              %td
                = link_to_if client.accessible_by_user?(current_user), name, client_path(client)

              %td.text-center= priority_value(client)
              %td.text-center
                = render 'client_match_routes', client: client

              - if active_client_ids.include?(client.id)
                %td.text-center= link_to 'Current Active Match', match_path(client.match_for_opportunity(@opportunity))
              -else
                - if can_activate_matches?
                  - unless @opportunity.match_route.allow_multiple_active_matches
                    = render 'activate_button', client: client
                  - else
                    = render 'activate_checkbox', client: client, f: f

      - # %p=paginate @matches
      - if @opportunity.match_route.allow_multiple_active_matches && can_activate_matches?
        .float-right= f.button :submit, value: 'Activate Matches'