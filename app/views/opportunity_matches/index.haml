- match = active_match = @opportunity.active_match
- active_client_ids = if match.present? then [match.client_id] else [] end
.d-flex.justify-content-end
  %h1= @heading
  - if can_view_client_confidentiality?
    - if params[:confidential_override].present?
      = link_to 'Hide Confidential Names', request.query_parameters.except(:confidential_override), class: 'btn btn-light ml-auto align-self-start'
    - else
      = link_to 'Show Confidential Names', request.query_parameters.merge({confidential_override: true}), class: 'btn btn-outline-danger ml-auto align-self-start '

.c-card.c-card-flush
  .c-card__content
    .c-detail-group.row
      .col-sm-6.c-detail-group.c-detail-group--stacked.c-detail-group--bordered
        = render 'matches/program_details', match: match
        = render 'matches/services', match: match
      .col-sm-6.c-detail-group.c-detail-group--stacked.c-detail-group
        = render 'matches/building_details', match: match
        = render 'requirements'

%ul.nav.nav-tabs
  - active_class = if @active == :show_available_clients then 'active' else '' end
  %li.nav-item{role: 'presentation', class: active_class}
    = link_to({action: :index, show_available_clients: :true}, class: 'nav-link') do
      Available Clients
  - active_class = if @active == :show_all_clients then 'active' else '' end
  %li.nav-item{role: 'presentation', class: active_class}
    = link_to({action: :index, show_all_clients: :true}, class: 'nav-link') do
      All Clients

.c-card.c-card-flush
  .c-card__content
    %p= paginate @matches
    %p= page_entries_info @matches
    - if @active == :show_available_clients
      %p Showing only clients who are available to be matched.
    - else
      %p 
        Showing 
        %strong all
        clients matching the criteria for the opportunity, even if they are already in a match.
    %table.table.table-striped
      %thead
        %tr
          %th Client Name
          %th.text-center Active in match?
          %th.text-center Activate Match?
      %tbody
        - if match.present?
          - client = match.client
          - hide_client_name = (client.confidential? || client.active_in_match.try(:confidential?)) && ! params[:confidential_override]
          - if hide_client_name
            - name = "(name hidden)"
          - else
            - name = client.name
          %tr.client--match-active
            %td= link_to name, client_path(client)
            %td.text-center= checkmark(client.active_in_match?)
            %td.text-center= link_to 'Current Active Match', match_path(match)
        - @matches.each do |client|
          - next if active_client_ids.include?(client.id)
          %tr
            - hide_client_name = (client.confidential? || client.active_in_match.try(:confidential?)) && ! params[:confidential_override]
            - if hide_client_name
              - name = "(name hidden)"
            - else
              - name = client.name
            %td= link_to name, client_path(client)
            %td.text-center= checkmark(client.active_in_match?)
            - match_warning = "Activating this match will cancel all other active matches for #{client.name}."
            - if active_match.present?
              - text = 'Activate Match Canceling Current'
              - match_warning += " In addition, it will cancel this match involving #{active_match.client.name}."
            - else
              - text = 'Activate Match'
              
            %td.text-center= link_to text, opportunity_match_path(@opportunity, client), class: 'btn btn-light mb-2', method: :patch, data: {confirm: match_warning}
    %p=paginate @matches
